# 端口
server.port: 8765

# 客户端名
spring.application.name: yijie.zuul.api

# 服务地址
eureka.client.serviceUrl.defaultZone: http://localhost:8761/eureka/

# 超時設定
zuul.host.socket-timeout-millis=20000
zuul.host.connect-timeout-millis=40000

#熔断器启用
feign.hystrix.enabled=true
hystrix.command.default.execution.timeout.enabled=true
#断路器的超时时间,下级服务返回超出熔断器时间，即便成功，消费端消息也是TIMEOUT,所以一般断路器的超时时间需要大于ribbon的超时时间。
#服务的返回时间大于ribbon的超时时间，会触发重试
#默认=1000，太小
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000

#断路器详细设置
#当在配置时间窗口内达到此数量的失败后，进行短路。默认20个）
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
#短路多久以后开始尝试是否恢复，默认5s）
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5
#出错百分比阈值，当达到此阈值后，开始短路。默认50%）
#hystrix.command.default.circuitBreaker.errorThresholdPercentage=50%
#ribbon请求连接的超时时间- 限制3秒内必须请求到服务，并不限制服务处理的返回时间
ribbon.ConnectTimeout=5000
#请求处理的超时时间 下级服务响应最大时间,超出时间消费方（路由也是消费方）返回timeout
ribbon.ReadTimeout=10000

#重试机制
#该参数用来开启重试机制，默认是关闭
spring.cloud.loadbalancer.retry.enabled=true
# 是否对所有操作重试
ribbon.OkToRetryOnAllOperations: true
# 同一服务不同实例的重试次数
ribbon.MaxAutoRetriesNextServer: 2
# 同一实例的重试次数
ribbon.MaxAutoRetries: 1


# 网关配置

# 易链数据操作服务
zuul.routes.data.path: /yilianData/**
zuul.routes.data.serviceId: yilian.data.client

# 易链客户端
zuul.routes.yl.path: /yl/**
zuul.routes.yl.serviceId: yilian.client

# 文件操作服务
zuul.routes.file.path: /file/**
zuul.routes.file.serviceId: file.client

# 易链验证服务
zuul.routes.rev.path: /rev/**
zuul.routes.rev.serviceId: yilian.rev.client

# 易链管理端服务
zuul.routes.ylmanager.path: /ylmanager/**
zuul.routes.ylmanager.serviceId: manager.client

# 易链数据库操作服务（测试入口）
zuul.routes.ylmanager.path: /testData/**
zuul.routes.ylmanager.serviceId: test.data.client